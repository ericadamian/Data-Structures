Algorithms:

maxHeapify(array, index){

	if index > heapsize / 2
	return
	endif


	largest = index
	leftChildIndex = 2 * index
	rightChildIndex = (2 * index) + 1


	if leftChildIndex <= heapSize AND array[leftChildIndex]array[largest] largest = leftChildIndex
	end if


	if rightChildIndex <= heapSize AND array[rightChildIndex] array[largest] largest = rightChildIndex
	end if


	if largest != index
		swap(array[index], array[largest])
		maxHeapify(array, largest)
	end if


end maxHeapify


maxUpHeap(array, index)

	while index 1 AND array[index/2] < array[index]
		swap(array[index/2], array[index])
		index = index / 2
	end while

end maxUpHeap